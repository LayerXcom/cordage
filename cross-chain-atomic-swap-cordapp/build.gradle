buildscript {
    ext.corda_release_version = '4.1'
    ext.corda_release_distribution = 'net.corda'
    ext.corda_gradle_plugins_version = '4.0.42'
    ext.kotlin_version = '1.2.71'
    ext.junit_version = '4.12'
    ext.quasar_version = '0.7.10'
    ext.jolokia_version = '1.3.7'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:publish-utils:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://dl.bintray.com/kotlin/exposed' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    mavenLocal()
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'maven-publish'

cordapp {
    signing {
        enabled false
    }
    targetPlatformVersion 4
    minimumPlatformVersion 3
    contract {
        name "Cross-chain atomic swap contract"
        vendor "LayerX Inc"
        licence "Apache 2.0"
        versionId 1
    }
    workflow {
        name "Cross-chain atomic swap workflow"
        vendor "LayerX Inc"
        licence "Apache 2.0"
        versionId 1
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // web3j version should strictly equal to 4.5.11 due to its okhttp dependency conflict
    // https://github.com/web3j/web3j/issues/1167#issuecomment-593369842
    compile "org.web3j:core:4.5.11"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:3.15.0"
    testCompile group: 'io.netty', name: 'netty-common', version: '4.1.45.Final'
    testImplementation "io.mockk:mockk:1.9.3.kotlin12"

    // Corda integration dependencies
    cordaCompile "$corda_release_distribution:corda-core:$corda_release_version"
    cordaCompile "$corda_release_distribution:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_distribution:corda-rpc:$corda_release_version"
    cordaCompile "$corda_release_distribution:corda-node:$corda_release_version"
    cordaCompile "$corda_release_distribution:corda-node-api:$corda_release_version"
    cordaRuntime "$corda_release_distribution:corda:$corda_release_version"

    testCompile "$corda_release_distribution:corda-test-utils:$corda_release_version"
    // TODO corda-node-driver 4.1 has a bug: https://github.com/corda/corda/issues/5055
//    testCompile "$corda_release_distribution:corda-node-driver:$corda_release_version"
    testCompile "$corda_release_distribution:corda-node-driver:4.0"

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin' //for kotlin file
    main.java.srcDirs += 'src/main/java' //for java file
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    delete "./build/nodes"
    directory "./build/nodes"

    signing {
        enabled false
    }

    nodeDefaults {
        rpcUsers = [[ user: "user1", "password": "password", "permissions": ["ALL"]]]
    }

    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: true, className: "jp.co.layerx.cordage.crosschainatomicswap.notary.CustomValidatingNotaryService"]
        p2pPort 10002
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10003"
            adminAddress "0.0.0.0:10103"
        }
        extraConfig = [
            dataSourceProperties: [
                dataSourceClassName : "org.postgresql.ds.PGSimpleDataSource",
                'dataSource.url' : "jdbc:postgresql://localhost:5432/postgres",
                'dataSource.user' : "postgres",
                'dataSource.password' : "password"
            ],
            database: [
                transactionIsolationLevel : "READ_COMMITTED"
            ]
        ]
    }
    node {
        name "O=ParticipantA,L=London,C=GB"
        p2pPort 10007
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10008"
            adminAddress "0.0.0.0:10108"
        }
    }
    node {
        name "O=ParticipantB,L=New York,C=US"
        p2pPort 10010
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10011"
            adminAddress "0.0.0.0:10111"
        }
    }
    node {
        name "O=ParticipantC,L=Paris,C=FR"
        p2pPort 10013
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10014"
            adminAddress "0.0.0.0:10114"
        }
    }
}

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}
